<?xml version="1.0" encoding="utf-8"?>

<project name="medigy-persistence-tools" default="all">

    <import file="../../../support/build/module.xml"/>
    <import file="../../../graphviz/support/build/graphviz.xml"/>

    <target name="init.define-module.dependencies.main.classpath" depends="init.define-modules-artifacts-home">
        <path id="module.dependencies.main.classpath">
            <fileset dir="${common.home}/depend/lib/build" includes="*.jar"/>
            <fileset dir="${common.home}/depend/lib/main" includes="*.jar"/>

            <fileset dir="${persistence.home}/depend/lib/build" includes="*.jar"/>
            <fileset dir="${persistence.home}/depend/lib/main" includes="*.jar"/>

            <path location="${graphviz.artifacts.home}/classes/main"/>
            <path location="${hibernate-doc.artifacts.home}/classes/main"/>
            <path location="${persistence.artifacts.home}/classes/main"/>
        </path>
    </target>

    <target name="init.define-module.dependencies.test.classpath" depends="init.define-modules-artifacts-home">
        <path id="module.dependencies.test.classpath">
            <fileset dir="${common.home}/depend/lib/build" includes="*.jar"/>
            <fileset dir="${common.home}/depend/lib/main" includes="*.jar"/>
            <fileset dir="${common.home}/depend/lib/test" includes="*.jar"/>

            <fileset dir="${persistence.home}/depend/lib/build" includes="*.jar"/>
            <fileset dir="${persistence.home}/depend/lib/main" includes="*.jar"/>
            <fileset dir="${persistence.home}/depend/lib/test" includes="*.jar"/>

            <path location="${graphviz.artifacts.home}/classes/main"/>
            <path location="${hibernate-doc.artifacts.home}/classes/main"/>
            <path location="${persistence.artifacts.home}/classes/main"/>
            <path location="${persistence.artifacts.home}/classes/test"/>
        </path>
    </target>

    <target name="db.generate-ddl" depends="compile.main,init.define-module.dependencies.main.classpath">
        <taskdef name="generate-ddl" classname="com.medigy.tool.persist.hibernate.ddl.GenerateDDLTask"
                                classpathref="module.dependencies.main.classpath">
            <classpath location="${module.artifacts.classes.main.home}"/>
        </taskdef>

        <property name="persistence.artifacts.ddl.home" value="${persistence.artifacts.home}/ddl"/>
        <delete dir="${persistence.artifacts.ddl.home}"/>
        <mkdir dir="${persistence.artifacts.ddl.home}"/>
        <generate-ddl destDir="${persistence.artifacts.ddl.home}"
            hibernateConfigClass="com.medigy.persist.util.HibernateConfiguration"
            hibernateConfigFile="/com/medigy/persist/hibernate.cfg.xml"
            />
    </target>

    <target name="doc.generate-dbdd-source" depends="compile.main,init.define-modules,init.define-module.dependencies.main.classpath,graphviz.init">
        <taskdef name="dbdg" classname="org.sns.tool.hibernate.dbdd.DatabaseDesignGeneratorTask"
                             classpathref="module.dependencies.main.classpath">
            <classpath location="${module.artifacts.classes.main.home}"/>
        </taskdef>

        <property name="persistence.artifacts.doc.home" value="${persistence.artifacts.home}/doc"/>
        <property name="persistence.artifacts.doc.db.dbdd.home" value="${persistence.artifacts.doc.home}/dbdd"/>
        <property name="persistence.artifacts.doc.db.dbdd.src" value="${persistence.artifacts.doc.db.dbdd.home}/dbdd.xml"/>

        <mkdir dir="${persistence.artifacts.doc.db.dbdd.home}"/>
        <dbdg docBookFile="${persistence.artifacts.doc.db.dbdd.src}"
              hibernateConfigClass="com.medigy.persist.util.HibernateConfiguration"
              hibernateConfigFile="/com/medigy/persist/hibernate.cfg.xml"
              structureClass="org.sns.tool.hibernate.struct.impl.DefaultTableStructure"
              structureRulesClass="com.medigy.tool.persist.hibernate.dbdd.MedigyDatabaseStructureRules"
              databaseDiagramRendererClass="com.medigy.tool.persist.hibernate.dbdd.MedigyDatabaseDiagramRenderer"
              graphvizDotCmdSpec="${graphviz.dot.exec.executable} ${graphviz.dot.exec.arg.cmd}"
              documentTitle="Medigy Data Model"
              associatedJavaDocHome="../javadoc"
              graphvizDotOutputType="GIF"
              mappedClassDocumentationProvidersClass="com.medigy.tool.persist.hibernate.dbdd.MedigyMappedClassDocumentationProviders"
            />
    </target>

    <target name="doc.generate-dbdd-html" depends="doc.generate-dbdd-source">
        <fail message="To generate DocBook, you need DocBook XSL package from http://docbook.sourceforge.net/projects/xsl/ and then set the doc.docbook-xsl.home property." unless="doc.docbook-xsl.home"/>
        <property name="module.support.dbdd-docbook-xsl.home" value="${module.support.home}/dbdd-docbook-xsl"/>
        <echo message="Creating chunked HTML output in ${persistence.artifacts.doc.db.dbdd.home}"/>

        <mkdir dir="${persistence.artifacts.doc.db.dbdd.home}/resources"/>
        <copy todir="${persistence.artifacts.doc.db.dbdd.home}/resources">
            <fileset dir="${module.support.dbdd-docbook-xsl.home}/resources"/>
        </copy>
        <copy todir="${persistence.artifacts.doc.db.dbdd.home}/resources">
            <fileset dir="${doc.docbook-xsl.home}/images"/>
        </copy>

        <xslt basedir="${persistence.artifacts.doc.db.dbdd.home}"
            destdir="${persistence.artifacts.doc.db.dbdd.home}"
            style="${module.support.dbdd-docbook-xsl.home}/stylesheets/chunk.xsl"
            force="yes" processor="trax" classpathref="module.dependencies.main.classpath">
            <param name="param.docbook.home" expression="${doc.docbook-xsl.home}"/>
            <include name="*.xml"/>
            <classpath location="${module.artifacts.classes.main.home}"/>
            <factory name="org.apache.xalan.processor.TransformerFactoryImpl"/> <!-- for some reason, built-in Xalan won't work so we use the latest and force JDK to use it -->
            <xmlcatalog>
                <entity publicId="doc.docbook-xsl.home/html/docbook.xsl" location="${doc.docbook-xsl.home}/html/docbook.xsl"/>
                <entity publicId="doc.docbook-xsl.home/html/chunk.xsl" location="${doc.docbook-xsl.home}/html/chunk.xsl"/>
            </xmlcatalog>
        </xslt>
    </target>

</project>